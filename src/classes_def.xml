<lcgdict>
 <class name="edm::EDProductGetter"/>
 <class name="edm::RefCore" ClassVersion="11">
   <field name="prodPtr_" transient = "true"/>
   <field name="prodGetter_" transient = "true"/>
   <field name="clientCache_" transient = "true"/>
 </class>
 <ioread sourceClass = "edm::RefCore" version="[1-]" targetClass="edm::RefCore" source = "" target="prodPtr_">
     <![CDATA[prodPtr_=0;
         ]]>
 </ioread>
  <ioread sourceClass = "edm::RefCore" version="[1-]" targetClass="edm::RefCore" source = "" target="clientCache_">
    <![CDATA[clientCache_=0;
    ]]>
  </ioread>
 <ioread sourceClass = "edm::RefCore" version="[1-]" targetClass="edm::RefCore" source="" target="prodGetter_">
   <![CDATA[edm::EDProductGetter::assignEDProductGetter(prodGetter_);
      ]]>
 </ioread>
 <class name="edm::RefCore::CheckTransientOnWrite" ClassVersion="4">
   <field name="transient_" transient="true"/>
 </class>
 <ioread sourceClass = "edm::RefCore::CheckTransientOnWrite" version="[1-]" targetClass="bool" source = "" target="transient_">
    <![CDATA[transient_=false;
    ]]>
 </ioread>
 <class name="edm::ConstPtrCache" ClassVersion="10">
   <field name="ptr_" transient="true"/>
 </class>
 <ioread sourceClass = "edm::ConstPtrCache" version="[1-]" targetClass="edm::ConstPtrCache" source = "" target="ptr_">
    <![CDATA[ptr_=0;
    ]]>
 </ioread>
 <class name="edm::BoolCache" ClassVersion="10">
   <field name="isCached_" transient="true"/>
 </class>
 <ioread sourceClass = "edm::BoolCache" version="[1-]" targetClass="edm::BoolCache" source = "" target="isCached_">
    <![CDATA[isCached_=0;
    ]]>
 </ioread>
 <class name="edm::reftobase::RefHolderBase" ClassVersion="10"/>
 <class name="edm::RefVectorBase<unsigned int>"/>
 <class name="edm::RefVectorBase<unsigned long>"/>
 <class name="edm::RefVectorBase<int>"/>
 <class name="edm::Ref<std::vector<int>,int,edm::refhelper::FindUsingAdvance<std::vector<int>,int> >"/>
 <class name="edm::RefVector<std::vector<int>,int,edm::refhelper::FindUsingAdvance<std::vector<int>,int> >"/>
 <class name="edm::RefToBaseVector<int>"/>
 <class name="edm::PtrVector<int>"/>
 <class name="edm::Ptr<int>"/>
 <class name="edm::reftobase::BaseVectorHolder<int>"/>
 <class name="edm::reftobase::RefVectorHolderBase" ClassVersion="10"/>
 <class name="edm::reftobase::IndirectVectorHolder<int>"/>
 <class name="edm::reftobase::VectorHolder<int, edm::RefVector<std::vector<int>,int,edm::refhelper::FindUsingAdvance<std::vector<int>,int> > >"/>
 <class name="edm::Wrapper<edm::RefToBaseVector<int> >" splitLevel="0"/>
 <class name="edm::Wrapper<edm::PtrVector<int> >" splitLevel="0"/>
 <class name="edm::Wrapper<edm::RefVector<std::vector<int>,int,edm::refhelper::FindUsingAdvance<std::vector<int>,int> > >" splitLevel="0"/>
 <class name="edm::PtrVectorBase" ClassVersion="10">
   <field name ="cachedItems_" transient = "true"/>
 </class>
  <!-- -->
  <ioread sourceClass = "edm::PtrVectorBase" version="[1-]" targetClass="edm::PtrVectorBase" source = "" target="cachedItems_">
    <![CDATA[cachedItems_.clear();
    ]]>
  </ioread>
   <!-- -->
<class name="edmNew::dstvdetails::DetSetVectorTrans" ClassVersion="10">
   <field name="filling" transient="true"/>
   <field name="getter" transient="true"/>
</class>
<class name="edmNew::dstvdetails::DetSetVectorTrans::Item" ClassVersion="10"/>
<class name="std::vector<edmNew::dstvdetails::DetSetVectorTrans::Item>"/>


<class name="edm::DataFrame" ClassVersion="10"/>
<class name="edm::DataFrameContainer" ClassVersion="10"/>
<class name="edm::Wrapper<edm::DataFrameContainer>" splitLevel="0"/>

 <class name="edm::HLTPathStatus" ClassVersion="10"/>
 <class name="edm::Wrapper<edm::HLTPathStatus>" splitLevel="0"/>
 <class name="std::vector<edm::HLTPathStatus>"/>
 <class name="edm::Wrapper<std::vector<edm::HLTPathStatus> >" splitLevel="0"/>
 <class name="edm::HLTGlobalStatus" ClassVersion="10"/>
 <class name="edm::Wrapper<edm::HLTGlobalStatus>" splitLevel="0"/>
 <class name="edm::TriggerResults" ClassVersion="10"/>
 <class name="edm::Wrapper<edm::TriggerResults>" splitLevel="0"/>
 <class name="edm::Other"/>
 <class name="edm::DoNotSortUponInsertion"/>
 <class name="edm::DoNotRecordParents"/>
 <class name="edm::helpers::DoNoPostReadFixup"/>
 <class name="edm::helpers::PostReadFixup">
   <field name="fixed_" transient="true"/>
 </class>
 <class name="edm::RangeMap<int,std::vector<float>,edm::CopyPolicy<float> >"/>
 <class name="edm::ValueMap<int>" />
 <class name="edm::ValueMap<unsigned int>" />
 <class name="edm::ValueMap<bool>" />
 <class name="edm::ValueMap<float>" />
 <class name="edm::ValueMap<double>" />
 <class name="edm::Wrapper<edm::ValueMap<int> >" splitLevel="0"/>
 <class name="edm::Wrapper<edm::ValueMap<bool> >" splitLevel="0"/>
 <class name="edm::Wrapper<edm::ValueMap<unsigned int> >" splitLevel="0"/>
 <class name="edm::Wrapper<edm::ValueMap<float> >" splitLevel="0"/>
 <class name="edm::Wrapper<edm::ValueMap<double> >" splitLevel="0"/>
 <class name="std::vector<edm::EventAuxiliary>"/>
 <class name="edm::Wrapper<std::vector<edm::EventAuxiliary> >"/>
 <class name="edm::Wrapper<std::vector<edm::ErrorSummaryEntry> >"/>
 <class name="edm::MergeableCounter" ClassVersion="10"/>
 <class name="edm::Wrapper<edm::MergeableCounter>"/>

 <class name="edm::ConditionsInEventBlock" ClassVersion="10"/>
 <class name="edm::ConditionsInRunBlock" ClassVersion="10"/>
 <class name="edm::ConditionsInLumiBlock" ClassVersion="10"/>
 <class name="edm::Wrapper<edm::ConditionsInEventBlock>"/>
 <class name="edm::Wrapper<edm::ConditionsInRunBlock>"/>
 <class name="edm::Wrapper<edm::ConditionsInLumiBlock>"/>

</lcgdict>
